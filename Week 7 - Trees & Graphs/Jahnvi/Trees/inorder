//inorder traversal without recursion

vector<int> inOrder(Node* root)
{
  // Your code here
 vector<int> in;
 stack <Node* > st;
 Node* curr=root;
 while(curr!=NULL || st.empty()==false){
     
     
 while(curr!=NULL){
     st.push(curr);
     curr=curr->left;
 }
 curr=st.top();
 st.pop();
 in.push_back(curr->data);
 curr=curr->right;
 }
 
  
  return in;
}


//inorder with recursion

vector<int> inOrder(Node* root)
{
  // Your code here
 vector<int> in;

 if(root==NULL){
     return {};
 }
 inOrder(root->left);
 in_push_back(root->data);
 inOrder(root->right);
 
 
  return in;
}
